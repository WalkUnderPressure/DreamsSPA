{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { withRouter } from 'next/router';\nimport { Component } from 'react';\nimport Layout from '../../Layout';\nimport TextField from '../../components/EditorField';\nimport Link from 'next/link';\n\nvar Redact = /*#__PURE__*/function (_Component) {\n  _inherits(Redact, _Component);\n\n  var _super = _createSuper(Redact);\n\n  function Redact(props) {\n    var _this;\n\n    _classCallCheck(this, Redact);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      item: {}\n    };\n    return _this;\n  }\n\n  _createClass(Redact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var query = this.props.router.query;\n\n      if (query.id) {\n        fetch(\"/api/redact/\".concat(query.id)).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          _this2.setState({\n            item: res\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var element = this.state.item;\n      var redact_item = null;\n\n      if (element.id) {\n        console.log('elem code name O ', element.codeName);\n        redact_item = __jsx(\"div\", null, __jsx(\"h1\", null, \" ID : \", element.id), __jsx(TextField, {\n          text: element.codeName,\n          parent: this,\n          fieldType: \"codeName\"\n        }), __jsx(TextField, {\n          text: element.description,\n          parent: this,\n          fieldType: \"description\"\n        }), __jsx(TextField, {\n          text: element.date\n        }));\n      } else {\n        redact_item = __jsx(\"div\", null, \"Empty\");\n      }\n\n      return __jsx(Layout, null, __jsx(\"div\", null, \"Redact\", redact_item, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this3.handleSave();\n        }\n      }, \"Save\")));\n    }\n  }, {\n    key: \"handleSave\",\n    value: function handleSave() {\n      console.log(\"Click save!\");\n      console.log(\"this Item : \", this.state.item);\n      console.log('this state codeName : ', this.state.codeName);\n    }\n  }, {\n    key: \"newValueOfField\",\n    value: function newValueOfField(children) {\n      console.log(\"field type : \", children.fieldType);\n      console.log(\"new value of field : \", children.state.text);\n    }\n  }]);\n\n  return Redact;\n}(Component);\n\nexport default _c = withRouter(Redact);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/redact/[id].js"],"names":["withRouter","Component","Layout","TextField","Link","Redact","props","state","item","query","router","id","fetch","then","res","json","setState","element","redact_item","console","log","codeName","description","date","handleSave","children","fieldType","text"],"mappings":";;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAFe;AAKlB;;;;wCAEmB;AAAA;;AAAA,UACEC,KADF,GACc,KAAKH,KADnB,CACRI,MADQ,CACED,KADF;;AAEhB,UAAIA,KAAK,CAACE,EAAV,EAAc;AACVC,QAAAA,KAAK,uBAAgBH,KAAK,CAACE,EAAtB,EAAL,CACKE,IADL,CACU,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SADb,EAEKF,IAFL,CAEU,UAAAC,GAAG,EAAI;AACT,UAAA,MAAI,CAACE,QAAL,CAAc;AAAER,YAAAA,IAAI,EAAEM;AAAR,WAAd;AACH,SAJL;AAKH;AACJ;;;6BAEQ;AAAA;;AACL,UAAMG,OAAO,GAAG,KAAKV,KAAL,CAAWC,IAA3B;AACA,UAAIU,WAAW,GAAG,IAAlB;;AACA,UAAID,OAAO,CAACN,EAAZ,EAAgB;AACZQ,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,OAAO,CAACI,QAAzC;AACAH,QAAAA,WAAW,GACP,mBACI,4BAAWD,OAAO,CAACN,EAAnB,CADJ,EAEI,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEM,OAAO,CAACI,QAAzB;AAAmC,UAAA,MAAM,EAAE,IAA3C;AAAiD,UAAA,SAAS,EAAC;AAA3D,UAFJ,EAGI,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEJ,OAAO,CAACK,WAAzB;AAAsC,UAAA,MAAM,EAAE,IAA9C;AAAoD,UAAA,SAAS,EAAC;AAA9D,UAHJ,EAII,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEL,OAAO,CAACM;AAAzB,UAJJ,CADJ;AAOH,OATD,MASO;AACHL,QAAAA,WAAW,GAAG,2BAAd;AACH;;AACD,aACI,MAAC,MAAD,QACI,6BAEKA,WAFL,EAII;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACM,UAAL,EAAJ;AAAA;AAAjB,gBAJJ,CADJ,CADJ;AAUH;;;iCAEW;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKb,KAAL,CAAWC,IAAtC;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqC,KAAKb,KAAL,CAAWc,QAAhD;AACH;;;oCAEeI,Q,EAAS;AACrBN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BK,QAAQ,CAACC,SAArC;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCK,QAAQ,CAAClB,KAAT,CAAeoB,IAAnD;AACH;;;;EAvDgB1B,S;;AA0DrB,oBAAeD,UAAU,CAACK,MAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport { Component } from 'react'\nimport Layout from '../../Layout';\nimport TextField from '../../components/EditorField';\nimport Link from 'next/link';\n\nclass Redact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {}\n        }\n    }\n\n    componentDidMount() {\n        const { router: { query } } = this.props;\n        if (query.id) {\n            fetch(`/api/redact/${query.id}`)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({ item: res })\n                })\n        }\n    }\n\n    render() {\n        const element = this.state.item;\n        let redact_item = null;\n        if (element.id) {\n            console.log('elem code name O ', element.codeName);\n            redact_item =\n                <div>\n                    <h1> ID : {element.id}</h1>\n                    <TextField text={element.codeName} parent={this} fieldType='codeName'/>\n                    <TextField text={element.description} parent={this} fieldType='description'/>\n                    <TextField text={element.date}/>\n                </div>\n        } else {\n            redact_item = <div>Empty</div>\n        }\n        return (\n            <Layout>\n                <div>\n                    Redact\n                    {redact_item}\n\n                    <button onClick={()=>this.handleSave()}>Save</button>\n                </div>\n            </Layout>\n        )\n    }\n\n    handleSave(){\n        console.log(\"Click save!\");\n        console.log(\"this Item : \",this.state.item);\n        console.log('this state codeName : ',this.state.codeName);\n    }\n\n    newValueOfField(children){\n        console.log(\"field type : \",children.fieldType);\n        console.log(\"new value of field : \",children.state.text);\n    }\n}\n\nexport default withRouter(Redact)"]},"metadata":{},"sourceType":"module"}