{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withRouter } from 'next/router';\nimport { Component } from 'react';\nimport Layout from '../../Layout';\nimport RedactForm from '../../components/RedactForm';\n\nclass Redact extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOnSubmit\", changedData => {\n      const url = \"/api/redact\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(changedData)\n      }).then(res => res.json()); //.then(\n      //     res => this.setState({ item: res.data })\n      // );\n    });\n\n    this.state = {\n      item: {}\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      item: props.item\n    });\n  }\n\n  componentDidMount() {\n    const {\n      router: {\n        query\n      }\n    } = this.props;\n\n    if (query.id) {\n      fetch(`/api/redact/${query.id}`).then(res => res.json()).then(res => {\n        this.setState({\n          item: res\n        });\n      });\n    }\n  }\n\n  render() {\n    const element = this.state.item;\n    return __jsx(Layout, null, __jsx(\"div\", null, \"Redact\", __jsx(RedactForm, {\n      data: element,\n      onSubmit: this.handleOnSubmit\n    })));\n  }\n\n}\n\nexport default withRouter(Redact);","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/redact/[id].js"],"names":["withRouter","Component","Layout","RedactForm","Redact","constructor","props","changedData","url","fetch","method","headers","body","JSON","stringify","then","res","json","state","item","getDerivedStateFromProps","componentDidMount","router","query","id","setState","render","element","handleOnSubmit"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,4CAmCDC,WAAD,IAAiB;AAC9B,YAAMC,GAAG,GAAG,aAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AACPE,QAAAA,MAAM,EAAE,MADD;AAEPC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFF;AAKPC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf;AALC,OAAN,CAAL,CAMGQ,IANH,CAOIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPX,EAF8B,CAW9B;AACA;AACA;AACH,KAjDkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAED,SAAOC,wBAAP,CAAgCd,KAAhC,EAAuCY,KAAvC,EAA8C;AAC1C,2CAAYA,KAAZ;AAAmBC,MAAAA,IAAI,EAAEb,KAAK,CAACa;AAA/B;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,QAAwB,KAAKjB,KAAnC;;AACA,QAAIiB,KAAK,CAACC,EAAV,EAAc;AACVf,MAAAA,KAAK,CAAE,eAAcc,KAAK,CAACC,EAAG,EAAzB,CAAL,CACKT,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,aAAKS,QAAL,CAAc;AAAEN,UAAAA,IAAI,EAAEH;AAAR,SAAd;AACH,OAJL;AAKH;AACJ;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKT,KAAL,CAAWC,IAA3B;AAEA,WACI,MAAC,MAAD,QACI,6BAEI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAEQ,OAAlB;AAA2B,MAAA,QAAQ,EAAE,KAAKC;AAA1C,MAFJ,CADJ,CADJ;AAQH;;AAlC0B;;AAqD/B,eAAe5B,UAAU,CAACI,MAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport { Component } from 'react'\nimport Layout from '../../Layout';\nimport RedactForm from '../../components/RedactForm';\n\nclass Redact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {}\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return { ...state, item: props.item };\n    }\n\n    componentDidMount() {\n        const { router: { query } } = this.props;\n        if (query.id) {\n            fetch(`/api/redact/${query.id}`)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({ item: res })\n                })\n        }\n    }\n\n    render() {\n        const element = this.state.item;\n\n        return (\n            <Layout>\n                <div>\n                    Redact\n                    <RedactForm data={element} onSubmit={this.handleOnSubmit} />\n                </div>\n            </Layout>\n        )\n    }\n\n    handleOnSubmit = (changedData) => {\n        const url = \"/api/redact\";\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(changedData)\n        }).then(\n            res => res.json()\n        )\n        //.then(\n        //     res => this.setState({ item: res.data })\n        // );\n    }\n}\n\nexport default withRouter(Redact)"]},"metadata":{},"sourceType":"module"}