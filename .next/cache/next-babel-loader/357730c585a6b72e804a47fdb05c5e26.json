{"ast":null,"code":"const express = require('express');\n\nconst next = require('next');\n\nconst port = parseInt(process.env.PORT, 10) || 3000;\nconst dev = true;\nconst app = next({\n  dev\n});\nconst handle = app.getRequestHandler();\napp.prepare().then(() => {\n  const server = express();\n  server.get('/a', (req, res) => {\n    return app.render(req, res, '/a', req.query);\n  });\n  server.get('/b', (req, res) => {\n    return app.render(req, res, '/b', req.query);\n  });\n  server.all('*', (req, res) => {\n    return handle(req, res);\n  });\n  server.listen(port, err => {\n    if (err) throw err;\n    console.log(`> Ready on http://localhost:${port}`);\n  });\n});","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/index.js"],"names":["express","require","next","port","parseInt","process","env","PORT","dev","app","handle","getRequestHandler","prepare","then","server","get","req","res","render","query","all","listen","err","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AACA,MAAMC,GAAG,OAAT;AACA,MAAMC,GAAG,GAAGP,IAAI,CAAC;AAAEM,EAAAA;AAAF,CAAD,CAAhB;AACA,MAAME,MAAM,GAAGD,GAAG,CAACE,iBAAJ,EAAf;AAEAF,GAAG,CAACG,OAAJ,GAAcC,IAAd,CAAmB,MAAM;AACvB,QAAMC,MAAM,GAAGd,OAAO,EAAtB;AAEAc,EAAAA,MAAM,CAACC,GAAP,CAAW,IAAX,EAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,WAAOR,GAAG,CAACS,MAAJ,CAAWF,GAAX,EAAgBC,GAAhB,EAAqB,IAArB,EAA2BD,GAAG,CAACG,KAA/B,CAAP;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACC,GAAP,CAAW,IAAX,EAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,WAAOR,GAAG,CAACS,MAAJ,CAAWF,GAAX,EAAgBC,GAAhB,EAAqB,IAArB,EAA2BD,GAAG,CAACG,KAA/B,CAAP;AACD,GAFD;AAIAL,EAAAA,MAAM,CAACM,GAAP,CAAW,GAAX,EAAgB,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAC5B,WAAOP,MAAM,CAACM,GAAD,EAAMC,GAAN,CAAb;AACD,GAFD;AAIAH,EAAAA,MAAM,CAACO,MAAP,CAAclB,IAAd,EAAqBmB,GAAD,IAAS;AAC3B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BrB,IAAK,EAAhD;AACD,GAHD;AAID,CAnBD","sourcesContent":["const express = require('express')\nconst next = require('next')\n\nconst port = parseInt(process.env.PORT, 10) || 3000\nconst dev = process.env.NODE_ENV !== 'production'\nconst app = next({ dev })\nconst handle = app.getRequestHandler()\n\napp.prepare().then(() => {\n  const server = express()\n\n  server.get('/a', (req, res) => {\n    return app.render(req, res, '/a', req.query)\n  })\n\n  server.get('/b', (req, res) => {\n    return app.render(req, res, '/b', req.query)\n  })\n\n  server.all('*', (req, res) => {\n    return handle(req, res)\n  })\n\n  server.listen(port, (err) => {\n    if (err) throw err\n    console.log(`> Ready on http://localhost:${port}`)\n  })\n})"]},"metadata":{},"sourceType":"script"}