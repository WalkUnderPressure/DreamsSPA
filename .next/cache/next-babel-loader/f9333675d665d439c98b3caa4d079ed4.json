{"ast":null,"code":"var __jsx = React.createElement;\n// import React from 'react';\n// import Layout from '../Layout/layout'\n// const Home = ()=>{\n//     let items = recipies.map(item =>{\n//         return <li>{item}</li>\n//     })\n//     return(\n//         <Layout>\n//             <div>\n//                 <form method=\"post\">\n//                     <input type=\"text\"/>\n//                     <button type=\"submit\">get</button>\n//                 </form>\n//             <h1>Recepies</h1>\n//             <ul>\n//                 {items}\n//             </ul>\n//         </div>\n//         </Layout>\n//     )\n// }\n// export default Home;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from '../index.module.css';\n\nfunction Square(props) {\n  return __jsx(\"button\", {\n    className: styles.square,\n    onClick: props.onClick\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return __jsx(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.handleClick(i)\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.boardRow\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), __jsx(\"div\", {\n      className: styles.boardRow\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), __jsx(\"div\", {\n      className: styles.boardRow\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return __jsx(\"div\", {\n      className: \"game\"\n    }, __jsx(\"div\", {\n      className: \"game-board\"\n    }, __jsx(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i)\n    })), __jsx(\"div\", {\n      className: \"game-info\"\n    }, __jsx(\"div\", null, status), __jsx(\"ol\", null)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/index.js"],"names":["React","ReactDOM","styles","Square","props","square","onClick","value","Board","Component","renderSquare","i","squares","handleClick","render","boardRow","Game","constructor","state","history","Array","fill","xIsNext","current","length","slice","calculateWinner","setState","concat","winner","status","lines","a","b","c"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import Layout from '../Layout/layout'\n\n// const Home = ()=>{\n    \n//     let items = recipies.map(item =>{\n//         return <li>{item}</li>\n//     })\n    \n//     return(\n//         <Layout>\n//             <div>\n//                 <form method=\"post\">\n//                     <input type=\"text\"/>\n//                     <button type=\"submit\">get</button>\n//                 </form>\n//             <h1>Recepies</h1>\n//             <ul>\n//                 {items}\n//             </ul>\n//         </div>\n//         </Layout>\n        \n//     )\n// }\n\n// export default Home;\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from '../index.module.css';\n\n  function Square(props) {\n    return (\n      <button className={styles.square} onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      return <Square value={this.props.squares[i]}\n      onClick={() => this.props.handleClick(i)} />;\n    }\n    \n      render() {\n        return (\n          <div>\n            <div className={styles.boardRow}>\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n            </div>\n            <div className={styles.boardRow}>\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n              {this.renderSquare(5)}\n            </div>\n            <div className={styles.boardRow}>\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n            </div>\n          </div>\n        );\n      }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          history: [{\n            squares: Array(9).fill(null),\n          }],\n          xIsNext: true\n        };\n      }\n\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          history: history.concat([{\n            squares: squares,\n          }]),\n          xIsNext: !this.state.xIsNext,\n        });\n      }\n\n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = calculateWinner(current.squares);\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n    \n        return (\n          <div className=\"game\">\n            <div className=\"game-board\">\n              <Board\n                squares={current.squares}\n                onClick={(i) => this.handleClick(i)}\n              />\n            </div>\n            <div className=\"game-info\">\n              <div>{status}</div>\n              <ol>{/* TODO */}</ol>\n            </div>\n          </div>\n        );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  export default Game;\n  "]},"metadata":{},"sourceType":"module"}