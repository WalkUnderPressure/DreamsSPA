{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from \"react\";\n\nclass RedactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSave\", () => {\n      console.log('save : ', this.state);\n      const url = \"/api/redact\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => response.text()).then(html => console.log(html));\n    });\n\n    this.state = {\n      id: this.props.data.id,\n      codeName: this.props.data.codeName,\n      description: this.props.data.description,\n      date: this.props.data.date\n    };\n  }\n\n  render() {\n    const element = this.state;\n    return __jsx(\"form\", {\n      action: \"/api/redact\",\n      method: \"post\"\n    }, __jsx(\"h1\", null, \" ID : \", element.id), __jsx(\"input\", {\n      type: \"text\",\n      name: \"codeName\",\n      value: element.codeName,\n      onChange: event => this.handleInputChange(event)\n    }), __jsx(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: element.description,\n      onChange: event => this.handleInputChange(event)\n    }), __jsx(\"button\", {\n      onClick: () => this.handleSave()\n    }, \"Save\"));\n  }\n\n  handleInputChange(event) {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n}\n\nexport default RedactForm;","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/components/RedactForm/index.js"],"names":["Component","RedactForm","constructor","props","console","log","state","url","fetch","method","headers","body","JSON","stringify","then","response","text","html","id","data","codeName","description","date","render","element","event","handleInputChange","handleSave","value","target","name","setState"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,wCA+BN,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,KAAKC,KAA3B;AAEA,YAAMC,GAAG,GAAG,aAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AACPE,QAAAA,MAAM,EAAE,MADD;AAEPC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFF;AAKPC,QAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe,KAAKP,KAApB;AALA,OAAN,CAAL,CAMGQ,IANH,CAOIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPhB,EAQEF,IARF,CASIG,IAAI,IAAIb,OAAO,CAACC,GAAR,CAAYY,IAAZ,CATZ;AAWH,KA9CkB;;AAEf,SAAKX,KAAL,GAAa;AACTY,MAAAA,EAAE,EAAE,KAAKf,KAAL,CAAWgB,IAAX,CAAgBD,EADX;AAETE,MAAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWgB,IAAX,CAAgBC,QAFjB;AAGTC,MAAAA,WAAW,EAAE,KAAKlB,KAAL,CAAWgB,IAAX,CAAgBE,WAHpB;AAITC,MAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWgB,IAAX,CAAgBG;AAJb,KAAb;AAMH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKlB,KAArB;AACA,WACI;AAAM,MAAA,MAAM,EAAC,aAAb;AAA2B,MAAA,MAAM,EAAC;AAAlC,OACI,4BAAWkB,OAAO,CAACN,EAAnB,CADJ,EAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAEM,OAAO,CAACJ,QAAlD;AAA4D,MAAA,QAAQ,EAAGK,KAAD,IAAW,KAAKC,iBAAL,CAAuBD,KAAvB;AAAjF,MAHJ,EAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,aAAxB;AAAsC,MAAA,KAAK,EAAED,OAAO,CAACH,WAArD;AAAkE,MAAA,QAAQ,EAAGI,KAAD,IAAW,KAAKC,iBAAL,CAAuBD,KAAvB;AAAvF,MAJJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKE,UAAL;AAAvB,cANJ,CADJ;AAUH;;AAEDD,EAAAA,iBAAiB,CAACD,KAAD,EAAQ;AACrB,UAAMG,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaD,KAA3B;AACA,UAAME,IAAI,GAAGL,KAAK,CAACI,MAAN,CAAaC,IAA1B;AACA,SAAKC,QAAL,CAAc;AACV,OAACD,IAAD,GAAQF;AADE,KAAd;AAGH;;AA9B8B;;AAkDnC,eAAe3B,UAAf","sourcesContent":["import { Component } from \"react\";\n\nclass RedactForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.data.id,\n            codeName: this.props.data.codeName,\n            description: this.props.data.description,\n            date: this.props.data.date\n        }\n    }\n    render() {\n        const element = this.state;\n        return (\n            <form action='/api/redact' method=\"post\" >\n                <h1> ID : {element.id}</h1>\n\n                <input type=\"text\" name=\"codeName\" value={element.codeName} onChange={(event) => this.handleInputChange(event)} />\n                <input type=\"text\" name=\"description\" value={element.description} onChange={(event) => this.handleInputChange(event)} />\n\n                <button onClick={() => this.handleSave()}>Save</button>\n            </form>\n        )\n    }\n\n    handleInputChange(event) {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSave = () => {\n        console.log('save : ',this.state);\n\n        const url = \"/api/redact\";\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body : JSON.stringify(this.state)\n        }).then(\n            response => response.text()\n        ).then(\n            html => console.log(html)\n        );\n    }\n}\n\nexport default RedactForm;"]},"metadata":{},"sourceType":"module"}