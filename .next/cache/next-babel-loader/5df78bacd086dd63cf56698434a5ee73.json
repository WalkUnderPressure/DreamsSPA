{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from 'next/router';\nimport { Component } from 'react';\nimport Layout from '../../Layout';\n\nclass Redact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      router: {\n        query\n      }\n    } = this.props;\n\n    if (query.id) {\n      fetch(`/api/redact/${query.id}`).then(res => res.json()).then(res => {\n        this.setState({\n          item: res\n        });\n      });\n    }\n  }\n\n  render() {\n    const element = this.state.item;\n    let redact_item = null;\n\n    if (element) {\n      console.log('elem code name O ', element.codeName);\n      redact_item = __jsx(\"div\", null, __jsx(\"h1\", null, \" ID : \", element.id), __jsx(Editor, {\n        value: element.codeName\n      }));\n    } else {\n      redact_item = __jsx(\"div\", null, \"Empty\");\n    }\n\n    return __jsx(Layout, null, __jsx(\"div\", null, \"Redact\", redact_item));\n  }\n\n}\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('props : editor : value ', this);\n    console.log('props : editor : ', this.props);\n    this.state = {\n      textareaValue: this.props.value\n    };\n  }\n\n  handleOnChange(event) {\n    this.setState({\n      textareaValue: event.target.value\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"form\", {\n      onSubmit: event => this.handleOnSubmit(event)\n    }, __jsx(\"textarea\", {\n      value: this.state.textareaValue,\n      onChange: event => this.handleOnChange(event)\n    })));\n  }\n\n}\n\nexport default withRouter(Redact);","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/redact/[id].js"],"names":["withRouter","Component","Layout","Redact","constructor","props","state","item","componentDidMount","router","query","id","fetch","then","res","json","setState","render","element","redact_item","console","log","codeName","Editor","React","textareaValue","value","handleOnChange","event","target","handleOnSubmit"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,QAAuB,KAAKL,KAAlC;;AACA,QAAIK,KAAK,CAACC,EAAV,EAAc;AACVC,MAAAA,KAAK,CAAE,eAAcF,KAAK,CAACC,EAAG,EAAzB,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,aAAKE,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAGO;AAAT,SAAd;AACH,OAJL;AAKH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKZ,KAAL,CAAWC,IAA3B;AACA,QAAIY,WAAW,GAAG,IAAlB;;AACA,QAAGD,OAAH,EAAW;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCH,OAAO,CAACI,QAAxC;AACJH,MAAAA,WAAW,GACP,mBACI,4BAAWD,OAAO,CAACP,EAAnB,CADJ,EAEI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEO,OAAO,CAACI;AAAvB,QAFJ,CADJ;AAKC,KAPD,MAOK;AACDH,MAAAA,WAAW,GAAG,2BAAd;AACH;;AACD,WACI,MAAC,MAAD,QACI,6BAEKA,WAFL,CADJ,CADJ;AAQH;;AAxC0B;;AA2C/B,MAAMI,MAAN,SAAqBC,KAAK,CAACvB,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC,IAAtC;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC,KAAKhB,KAArC;AACA,SAAKC,KAAL,GAAa;AACXmB,MAAAA,aAAa,EAAE,KAAKpB,KAAL,CAAWqB;AADf,KAAb;AAGD;;AACDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,SAAKZ,QAAL,CAAc;AACZS,MAAAA,aAAa,EAAEG,KAAK,CAACC,MAAN,CAAaH;AADhB,KAAd;AAGD;;AAEDT,EAAAA,MAAM,GAAG;AACP,WACI,mBACE;AAAM,MAAA,QAAQ,EAAGW,KAAD,IAAW,KAAKE,cAAL,CAAoBF,KAApB;AAA3B,OACI;AAAU,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWmB,aAA5B;AACA,MAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKD,cAAL,CAAoBC,KAApB;AADrB,MADJ,CADF,CADJ;AAQD;;AAxBgC;;AA2BrC,eAAe5B,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport { Component } from 'react'\nimport Layout from '../../Layout';\n\nclass Redact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item : {}\n        }\n    }\n\n    componentDidMount() {\n        const { router: { query }} = this.props;\n        if (query.id) {\n            fetch(`/api/redact/${query.id}`)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({ item : res })\n                })\n        }\n    }\n\n    render() {\n        const element = this.state.item;\n        let redact_item = null; \n        if(element){\n            console.log('elem code name O ',element.codeName);\n        redact_item = \n            <div> \n                <h1> ID : {element.id}</h1>\n                <Editor value={element.codeName}/>\n            </div>\n        }else{\n            redact_item = <div>Empty</div>\n        }\n        return (\n            <Layout>\n                <div>\n                    Redact\n                    {redact_item}\n                </div>\n            </Layout>\n        )\n    }\n}\n\nclass Editor extends React.Component {\n    constructor(props) {\n      super(props)\n      console.log('props : editor : value ',this);\n      console.log('props : editor : ',this.props);\n      this.state = {\n        textareaValue: this.props.value\n      }\n    }\n    handleOnChange(event) {\n      this.setState({\n        textareaValue: event.target.value\n      })\n    }\n    \n    render() {\n      return(\n          <div>\n            <form onSubmit={(event) => this.handleOnSubmit(event)}>\n                <textarea value={this.state.textareaValue} \n                onChange={(event) => this.handleOnChange(event)}></textarea>\n            </form>\n        </div>\n      ) \n    }\n  }\n\nexport default withRouter(Redact)"]},"metadata":{},"sourceType":"module"}