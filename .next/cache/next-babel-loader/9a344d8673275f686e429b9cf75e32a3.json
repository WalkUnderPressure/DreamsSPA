{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { withRouter } from 'next/router';\nimport { Component } from 'react';\nimport Layout from '../../Layout';\n\nvar Redact = /*#__PURE__*/function (_Component) {\n  _inherits(Redact, _Component);\n\n  var _super = _createSuper(Redact);\n\n  function Redact(props) {\n    var _this;\n\n    _classCallCheck(this, Redact);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      item: {}\n    };\n    return _this;\n  }\n\n  _createClass(Redact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var query = this.props.router.query;\n\n      if (query.id) {\n        fetch(\"/api/redact/\".concat(query.id)).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          _this2.setState({\n            item: res\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.state.item;\n      var redact_item = null;\n\n      if (element) {\n        redact_item = __jsx(\"div\", null, __jsx(\"h1\", null, \" ID : \", element.id));\n      } else {\n        redact_item = __jsx(\"div\", null, \"Empty\");\n      }\n\n      return __jsx(Layout, null, __jsx(\"div\", null, \"Redact\", __jsx(Editor, null), redact_item));\n    }\n  }]);\n\n  return Redact;\n}(Component);\n\nvar Editor = /*#__PURE__*/function (_React$Component) {\n  _inherits(Editor, _React$Component);\n\n  var _super2 = _createSuper(Editor);\n\n  function Editor(props) {\n    var _this3;\n\n    _classCallCheck(this, Editor);\n\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      textareaValue: 'Some Text'\n    };\n    return _this3;\n  }\n\n  _createClass(Editor, [{\n    key: \"handleOnChange\",\n    value: function handleOnChange(event) {\n      this.setState({\n        textareaValue: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(\"div\", null, __jsx(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this4.handleOnSubmit(event);\n        }\n      }, __jsx(\"textarea\", {\n        value: this.state.textareaValue,\n        onChange: function onChange(event) {\n          return _this4.handleOnChange(event);\n        }\n      })));\n    }\n  }]);\n\n  return Editor;\n}(React.Component);\n\nexport default _c = withRouter(Redact);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/redact/[id].js"],"names":["withRouter","Component","Layout","Redact","props","state","item","query","router","id","fetch","then","res","json","setState","element","redact_item","Editor","textareaValue","event","target","value","handleOnSubmit","handleOnChange","React"],"mappings":";;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAFe;AAKlB;;;;wCAEmB;AAAA;;AAAA,UACEC,KADF,GACa,KAAKH,KADlB,CACRI,MADQ,CACED,KADF;;AAEhB,UAAIA,KAAK,CAACE,EAAV,EAAc;AACVC,QAAAA,KAAK,uBAAgBH,KAAK,CAACE,EAAtB,EAAL,CACKE,IADL,CACU,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SADb,EAEKF,IAFL,CAEU,UAAAC,GAAG,EAAI;AACT,UAAA,MAAI,CAACE,QAAL,CAAc;AAAER,YAAAA,IAAI,EAAGM;AAAT,WAAd;AACH,SAJL;AAKH;AACJ;;;6BAEQ;AACL,UAAMG,OAAO,GAAG,KAAKV,KAAL,CAAWC,IAA3B;AACA,UAAIU,WAAW,GAAG,IAAlB;;AACA,UAAGD,OAAH,EAAW;AACXC,QAAAA,WAAW,GACP,mBACI,4BAAWD,OAAO,CAACN,EAAnB,CADJ,CADJ;AAIC,OALD,MAKK;AACDO,QAAAA,WAAW,GAAG,2BAAd;AACH;;AACD,aACI,MAAC,MAAD,QACI,6BAEI,MAAC,MAAD,OAFJ,EAGKA,WAHL,CADJ,CADJ;AASH;;;;EAvCgBf,S;;IA0CfgB,M;;;;;AACF,kBAAYb,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACXa,MAAAA,aAAa,EAAE;AADJ,KAAb;AAFiB;AAKlB;;;;mCACcC,K,EAAO;AACpB,WAAKL,QAAL,CAAc;AACZI,QAAAA,aAAa,EAAEC,KAAK,CAACC,MAAN,CAAaC;AADhB,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,aACI,mBACE;AAAM,QAAA,QAAQ,EAAE,kBAACF,KAAD;AAAA,iBAAW,MAAI,CAACG,cAAL,CAAoBH,KAApB,CAAX;AAAA;AAAhB,SACI;AAAU,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWa,aAA5B;AACA,QAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,iBAAW,MAAI,CAACI,cAAL,CAAoBJ,KAApB,CAAX;AAAA;AADV,QADJ,CADF,CADJ;AAQD;;;;EAtBgBK,KAAK,CAACvB,S;;AAyB3B,oBAAeD,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport { Component } from 'react'\nimport Layout from '../../Layout';\n\nclass Redact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item : {}\n        }\n    }\n\n    componentDidMount() {\n        const { router: { query }} = this.props;\n        if (query.id) {\n            fetch(`/api/redact/${query.id}`)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({ item : res })\n                })\n        }\n    }\n\n    render() {\n        const element = this.state.item;\n        let redact_item = null; \n        if(element){\n        redact_item = \n            <div> \n                <h1> ID : {element.id}</h1>\n            </div>\n        }else{\n            redact_item = <div>Empty</div>\n        }\n        return (\n            <Layout>\n                <div>\n                    Redact\n                    <Editor/>\n                    {redact_item}\n                </div>\n            </Layout>\n        )\n    }\n}\n\nclass Editor extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        textareaValue: 'Some Text'\n      }\n    }\n    handleOnChange(event) {\n      this.setState({\n        textareaValue: event.target.value\n      })\n    }\n    \n    render() {\n      return(\n          <div>\n            <form onSubmit={(event) => this.handleOnSubmit(event)}>\n                <textarea value={this.state.textareaValue} \n                onChange={(event) => this.handleOnChange(event)}></textarea>\n            </form>\n        </div>\n      ) \n    }\n  }\n\nexport default withRouter(Redact)"]},"metadata":{},"sourceType":"module"}