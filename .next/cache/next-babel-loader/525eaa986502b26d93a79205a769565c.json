{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from \"react\";\n\nclass RedactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOnSubmit\", event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n    });\n\n    _defineProperty(this, \"handleInputChange\", event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    });\n\n    this.state = _objectSpread({}, props.data);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      item: props.item\n    });\n  }\n\n  render() {\n    const element = this.state.item;\n    return __jsx(\"form\", {\n      onSubmit: this.handleOnSubmit\n    }, __jsx(\"h1\", null, \" ID : \", element.id), __jsx(\"input\", {\n      type: \"hidden\",\n      name: \"id\",\n      value: element.id\n    }), __jsx(\"input\", {\n      type: \"text\",\n      name: \"codeName\",\n      value: element.codeName,\n      onChange: this.handleInputChange\n    }), __jsx(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: element.description,\n      onChange: this.handleInputChange\n    }), __jsx(\"input\", {\n      type: \"text\",\n      name: \"date\",\n      value: element.date,\n      onChange: this.handleInputChange\n    }), __jsx(\"button\", {\n      type: \"submit\"\n    }, \"Save\"));\n  }\n\n}\n\nexport default RedactForm;","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/components/RedactForm/index.js"],"names":["Component","RedactForm","constructor","props","event","preventDefault","onSubmit","state","value","target","name","setState","data","getDerivedStateFromProps","item","render","element","handleOnSubmit","id","codeName","handleInputChange","description","date"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,4CA0BDC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKC,KAAzB;AACH,KA7BkB;;AAAA,+CA+BEH,KAAD,IAAW;AAC3B,YAAMI,KAAK,GAAGJ,KAAK,CAACK,MAAN,CAAaD,KAA3B;AACA,YAAME,IAAI,GAAGN,KAAK,CAACK,MAAN,CAAaC,IAA1B;AACA,WAAKC,QAAL,CAAc;AACV,SAACD,IAAD,GAAQF;AADE,OAAd;AAGH,KArCkB;;AAEf,SAAKD,KAAL,qBACQJ,KAAK,CAACS,IADd;AAGH;;AAED,SAAOC,wBAAP,CAAgCV,KAAhC,EAAuCI,KAAvC,EAA8C;AAC1C,2CAAYA,KAAZ;AAAmBO,MAAAA,IAAI,EAAEX,KAAK,CAACW;AAA/B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKT,KAAL,CAAWO,IAA3B;AACA,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKG;AAArB,OACI,4BAAWD,OAAO,CAACE,EAAnB,CADJ,EAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,IAA1B;AAA+B,MAAA,KAAK,EAAEF,OAAO,CAACE;AAA9C,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAEF,OAAO,CAACG,QAAlD;AAA4D,MAAA,QAAQ,EAAE,KAAKC;AAA3E,MAHJ,EAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,aAAxB;AAAsC,MAAA,KAAK,EAAEJ,OAAO,CAACK,WAArD;AAAkE,MAAA,QAAQ,EAAE,KAAKD;AAAjF,MAJJ,EAKI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,KAAK,EAAEJ,OAAO,CAACM,IAA9C;AAAoD,MAAA,QAAQ,EAAE,KAAKF;AAAnE,MALJ,EAOI;AAAQ,MAAA,IAAI,EAAC;AAAb,cAPJ,CADJ;AAWH;;AAzB8B;;AAyCnC,eAAenB,UAAf","sourcesContent":["import { Component } from \"react\";\n\nclass RedactForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ... props.data\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return { ...state, item: props.item };\n    }\n\n    render() {\n        const element = this.state.item;\n        return (\n            <form onSubmit={this.handleOnSubmit}>\n                <h1> ID : {element.id}</h1>\n                <input type=\"hidden\" name=\"id\" value={element.id} />\n                <input type=\"text\" name=\"codeName\" value={element.codeName} onChange={this.handleInputChange} />\n                <input type=\"text\" name=\"description\" value={element.description} onChange={this.handleInputChange} />\n                <input type=\"text\" name=\"date\" value={element.date} onChange={this.handleInputChange} />\n\n                <button type=\"submit\">Save</button>\n            </form>\n        )\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n}\n\nexport default RedactForm;"]},"metadata":{},"sourceType":"module"}