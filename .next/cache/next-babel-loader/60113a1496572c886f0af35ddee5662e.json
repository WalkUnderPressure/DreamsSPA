{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { withRouter } from 'next/router';\nimport { Component } from 'react';\nimport Layout from '../../Layout';\nimport RedactForm from '../../components/RedactForm';\n\nvar Redact = /*#__PURE__*/function (_Component) {\n  _inherits(Redact, _Component);\n\n  var _super = _createSuper(Redact);\n\n  function Redact(props) {\n    var _this;\n\n    _classCallCheck(this, Redact);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnSubmit\", function (changedData) {\n      var url = \"/api/redact\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(changedData)\n      }).then(function (res) {\n        return res.json();\n      }); //.then(\n      //     res => this.setState({ item: res.data })\n      // );\n    });\n\n    _this.state = {\n      item: {}\n    };\n    return _this;\n  } // static getDerivedStateFromProps(props, state) {\n  //     return { state, item: props.item };\n  // }\n\n\n  _createClass(Redact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var query = this.props.router.query;\n\n      if (query.id) {\n        fetch(\"/api/redact/\".concat(query.id)).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          _this2.setState({\n            item: res\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.state.item;\n      console.log('id element : ', element);\n      return __jsx(Layout, null, __jsx(\"div\", null, \"Redact\", __jsx(RedactForm, {\n        data: element,\n        onSubmit: this.handleOnSubmit\n      })));\n    }\n  }]);\n\n  return Redact;\n}(Component);\n\nexport default _c = withRouter(Redact);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/redact/[id].js"],"names":["withRouter","Component","Layout","RedactForm","Redact","props","changedData","url","fetch","method","headers","body","JSON","stringify","then","res","json","state","item","query","router","id","setState","element","console","log","handleOnSubmit"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,qEAqCF,UAACC,WAAD,EAAiB;AAC9B,UAAMC,GAAG,GAAG,aAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AACPE,QAAAA,MAAM,EAAE,MADD;AAEPC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFF;AAKPC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf;AALC,OAAN,CAAL,CAMGQ,IANH,CAOI,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAPP,EAF8B,CAW9B;AACA;AACA;AACH,KAnDkB;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAFe;AAKlB,G,CAED;AACA;AACA;;;;;wCAEmB;AAAA;;AAAA,UACGC,KADH,GACe,KAAKd,KADpB,CACPe,MADO,CACGD,KADH;;AAEf,UAAIA,KAAK,CAACE,EAAV,EAAc;AACVb,QAAAA,KAAK,uBAAgBW,KAAK,CAACE,EAAtB,EAAL,CACKP,IADL,CACU,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SADb,EAEKF,IAFL,CAEU,UAAAC,GAAG,EAAI;AACT,UAAA,MAAI,CAACO,QAAL,CAAc;AAAEJ,YAAAA,IAAI,EAAEH;AAAR,WAAd;AACH,SAJL;AAKH;AACJ;;;6BAEQ;AACL,UAAMQ,OAAO,GAAG,KAAKN,KAAL,CAAWC,IAA3B;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BF,OAA5B;AAEA,aACI,MAAC,MAAD,QACI,6BAEI,MAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,OAAlB;AAA2B,QAAA,QAAQ,EAAE,KAAKG;AAA1C,QAFJ,CADJ,CADJ;AAQH;;;;EApCgBzB,S;;AAuDrB,oBAAeD,UAAU,CAACI,MAAD,CAAzB","sourcesContent":["import { withRouter } from 'next/router'\nimport { Component } from 'react'\nimport Layout from '../../Layout';\nimport RedactForm from '../../components/RedactForm';\n\nclass Redact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {}\n        }\n    }\n\n    // static getDerivedStateFromProps(props, state) {\n    //     return { state, item: props.item };\n    // }\n\n    componentDidMount(){\n        const { router: { query } } = this.props;\n        if (query.id) {\n            fetch(`/api/redact/${query.id}`)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({ item: res })\n                })\n        }\n    }\n\n    render() {\n        const element = this.state.item;\n\n        console.log('id element : ',element);\n\n        return (\n            <Layout>\n                <div>\n                    Redact\n                    <RedactForm data={element} onSubmit={this.handleOnSubmit} />\n                </div>\n            </Layout>\n        )\n    }\n\n    handleOnSubmit = (changedData) => {\n        const url = \"/api/redact\";\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(changedData)\n        }).then(\n            res => res.json()\n        )\n        //.then(\n        //     res => this.setState({ item: res.data })\n        // );\n    }\n}\n\nexport default withRouter(Redact)"]},"metadata":{},"sourceType":"module"}