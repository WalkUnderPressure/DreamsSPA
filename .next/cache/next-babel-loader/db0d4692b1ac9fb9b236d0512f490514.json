{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import React from 'react';\n// import Layout from '../Layout/layout'\n// const Home = ()=>{\n//     let items = recipies.map(item =>{\n//         return <li>{item}</li>\n//     })\n//     return(\n//         <Layout>\n//             <div>\n//                 <form method=\"post\">\n//                     <input type=\"text\"/>\n//                     <button type=\"submit\">get</button>\n//                 </form>\n//             <h1>Recepies</h1>\n//             <ul>\n//                 {items}\n//             </ul>\n//         </div>\n//         </Layout>\n//     )\n// }\n// export default Home;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from '../index.module.css';\n\nfunction Square(props) {\n  return __jsx(\"button\", {\n    className: styles.square,\n    onClick: props.onClick\n  }, props.value);\n}\n\n_c = Square;\n\nvar Board = /*#__PURE__*/function (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  var _super = _createSuper(Board);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this = this;\n\n      return __jsx(Square, {\n        value: this.props.squares[i],\n        onClick: function onClick() {\n          return _this.props.handleClick(i);\n        }\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: styles.boardRow\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), __jsx(\"div\", {\n        className: styles.boardRow\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), __jsx(\"div\", {\n        className: styles.boardRow\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  var _super2 = _createSuper(Game);\n\n  function Game(props) {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    _this2 = _super2.call(this, props);\n    _this2.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares\n        }]),\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var winner = calculateWinner(current.squares);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return __jsx(\"div\", {\n        className: \"game\"\n      }, __jsx(\"div\", {\n        className: \"game-board\"\n      }, __jsx(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        }\n      })), __jsx(\"div\", {\n        className: \"game-info\"\n      }, __jsx(\"div\", null, status), __jsx(\"ol\", null)));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/pages/index.js"],"names":["React","ReactDOM","styles","Square","props","square","onClick","value","Board","i","squares","handleClick","state","slice","calculateWinner","xIsNext","setState","boardRow","renderSquare","Component","Game","history","Array","fill","current","length","concat","winner","status","lines","a","b","c"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import Layout from '../Layout/layout'\n\n// const Home = ()=>{\n    \n//     let items = recipies.map(item =>{\n//         return <li>{item}</li>\n//     })\n    \n//     return(\n//         <Layout>\n//             <div>\n//                 <form method=\"post\">\n//                     <input type=\"text\"/>\n//                     <button type=\"submit\">get</button>\n//                 </form>\n//             <h1>Recepies</h1>\n//             <ul>\n//                 {items}\n//             </ul>\n//         </div>\n//         </Layout>\n        \n//     )\n// }\n\n// export default Home;\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from '../index.module.css';\n\n  function Square(props) {\n    return (\n      <button className={styles.square} onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n  \n  class Board extends React.Component {\n    renderSquare(i) {\n      return <Square value={this.props.squares[i]}\n      onClick={() => this.props.handleClick(i)} />;\n    }\n  \n    handleClick(i) {\n        const squares = this.state.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n          }\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({squares: squares,xIsNext: !this.state.xIsNext});\n      }\n    \n      render() {\n        return (\n          <div>\n            <div className={styles.boardRow}>\n              {this.renderSquare(0)}\n              {this.renderSquare(1)}\n              {this.renderSquare(2)}\n            </div>\n            <div className={styles.boardRow}>\n              {this.renderSquare(3)}\n              {this.renderSquare(4)}\n              {this.renderSquare(5)}\n            </div>\n            <div className={styles.boardRow}>\n              {this.renderSquare(6)}\n              {this.renderSquare(7)}\n              {this.renderSquare(8)}\n            </div>\n          </div>\n        );\n      }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          history: [{\n            squares: Array(9).fill(null),\n          }],\n          xIsNext: true\n        };\n      }\n\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          history: history.concat([{\n            squares: squares,\n          }]),\n          xIsNext: !this.state.xIsNext,\n        });\n      }\n      \n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = calculateWinner(current.squares);\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n    \n        return (\n          <div className=\"game\">\n            <div className=\"game-board\">\n              <Board\n                squares={current.squares}\n                onClick={(i) => this.handleClick(i)}\n              />\n            </div>\n            <div className=\"game-info\">\n              <div>{status}</div>\n              <ol>{/* TODO */}</ol>\n            </div>\n          </div>\n        );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  export default Game;\n  "]},"metadata":{},"sourceType":"module"}