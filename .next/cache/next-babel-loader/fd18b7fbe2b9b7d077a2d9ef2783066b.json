{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\n\nclass RedactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.data.id,\n      codeName: this.props.data.codeName,\n      description: this.props.data.description,\n      date: this.props.data.date\n    };\n  }\n\n  render() {\n    const element = this.props.data;\n    console.log('elem', element);\n    console.log('id ', element.codeName);\n    return __jsx(\"form\", null, __jsx(\"h1\", null, \" ID : \", element.id), __jsx(\"input\", {\n      type: \"text\",\n      name: \"codeName\",\n      value: element.codeName,\n      onChange: event => this.handleInputChange(event)\n    }), __jsx(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: element.description,\n      onChange: event => this.handleInputChange(event)\n    }), __jsx(\"button\", {\n      onClick: () => this.handleSave()\n    }, \"Save\"));\n  }\n\n  handleInputChange(event) {\n    console.log(event.target);\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSave() {\n    console.log(\"Click save!\");\n    console.log(\"this Item : \", this.state.item);\n    console.log('this state codeName : ', this.state.codeName);\n  }\n\n}\n\nexport default RedactForm;","map":{"version":3,"sources":["/home/goldenteam/Desktop/Practice/Recipe/components/RedactForm/index.js"],"names":["Component","RedactForm","constructor","props","state","id","data","codeName","description","date","render","element","console","log","event","handleInputChange","handleSave","target","value","name","setState","item"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBD,EADZ;AAETE,MAAAA,QAAQ,EAAG,KAAKJ,KAAL,CAAWG,IAAX,CAAgBC,QAFlB;AAGTC,MAAAA,WAAW,EAAG,KAAKL,KAAL,CAAWG,IAAX,CAAgBE,WAHrB;AAITC,MAAAA,IAAI,EAAG,KAAKN,KAAL,CAAWG,IAAX,CAAgBG;AAJd,KAAb;AAMH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKR,KAAL,CAAWG,IAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,OAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,OAAO,CAACJ,QAA1B;AAEA,WACI,oBACI,4BAAWI,OAAO,CAACN,EAAnB,CADJ,EAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAEM,OAAO,CAACJ,QAAlD;AAA4D,MAAA,QAAQ,EAAGO,KAAD,IAAW,KAAKC,iBAAL,CAAuBD,KAAvB;AAAjF,MAHJ,EAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,aAAxB;AAAsC,MAAA,KAAK,EAAEH,OAAO,CAACH,WAArD;AAAkE,MAAA,QAAQ,EAAGM,KAAD,IAAW,KAAKC,iBAAL,CAAuBD,KAAvB;AAAvF,MAJJ,EAMI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKE,UAAL;AAAvB,cANJ,CADJ;AAUH;;AAEDD,EAAAA,iBAAiB,CAACD,KAAD,EAAQ;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACG,MAAlB;AACA,UAAMA,MAAM,GAAGH,KAAK,CAACG,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,SAAKC,QAAL,CAAc;AACV,OAACD,IAAD,GAAQD;AADE,KAAd;AAGH;;AAEDF,EAAAA,UAAU,GAAG;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKT,KAAL,CAAWiB,IAAvC;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKT,KAAL,CAAWG,QAAjD;AACH;;AAzC8B;;AA4CnC,eAAeN,UAAf","sourcesContent":["import { Component } from \"react\";\n\nclass RedactForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id : this.props.data.id,\n            codeName : this.props.data.codeName,\n            description : this.props.data.description,\n            date : this.props.data.date\n        }\n    }\n    render() {\n        const element = this.props.data;\n        console.log('elem',element);\n        console.log('id ',element.codeName);\n\n        return (\n            <form>\n                <h1> ID : {element.id}</h1>\n            \n                <input type=\"text\" name=\"codeName\" value={element.codeName} onChange={(event) => this.handleInputChange(event)} />\n                <input type=\"text\" name=\"description\" value={element.description} onChange={(event) => this.handleInputChange(event)} />\n\n                <button onClick={() => this.handleSave()}>Save</button>\n            </form>\n        )\n    }\n\n    handleInputChange(event) {\n        console.log(event.target);\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSave() {\n        console.log(\"Click save!\");\n        console.log(\"this Item : \", this.state.item);\n        console.log('this state codeName : ', this.state.codeName);\n    }\n}\n\nexport default RedactForm;"]},"metadata":{},"sourceType":"module"}